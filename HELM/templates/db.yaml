apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.db.pv.name }}
spec:
  capacity:
    storage: {{ .Values.db.pv.storage }}
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: {{ .Values.db.pv.hostpath }}
  storageClassName: local-path

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.db.pvc.name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.db.pvc.storage }}
status: {}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.db.name }}
  labels:
    name : {{.Values.db.name }}
spec:
  replicas: {{ .Values.db.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Values.db.name }}
  template:
    metadata:
      labels:
        name: {{ .Values.db.name }}
    spec:
      containers:
        - name: {{ .Values.db.name }}
          envFrom:
            - secretRef:
                name: {{ .Values.db.config.secret }}
            - configMapRef:
                name: {{ .Values.db.config.configmap }}
          image: {{ .Values.db.image.repository }}
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.db.service.port }}
              protocol: TCP
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}


---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.db.name }}
  labels:
    name: {{ .Values.db.name }}
spec:
  type: {{ .Values.db.service.type }}
  ports:
    - port: {{ .Values.db.service.port }}
      targetPort: {{ .Values.db.service.port }}
  selector:
    name: {{ .Values.db.name }}
